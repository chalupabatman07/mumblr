# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthToken {
  token: String!
}

type Conversation {
  id: ID!
  messages: [Message]!
  participants: [Participant!]!
}

input CreateMessageInput {
  content: String!
  conversationId: String!
}

"""Users genders"""
enum Gender {
  GENDERFLUID
  GENDERQUEER
  MALE
  NONBINARY
  TRANSGENDER
  TRANSMEN
  TRANSSEXUAL
  TRANSWOMEN
  WOMEN
}

type Match {
  conversation: Conversation!
  id: ID!
  matchId: String!
  userId: String!
}

type Message {
  content: String
  conversationId: String
  id: Int
  sentAt: String
  sentBy: String
}

type Mutation {
  createMatch(matchId: String!): Match!
  createMessageForConversation(input: CreateMessageInput!): Conversation!
  createMessageForConversationId(input: CreateMessageInput!): [Message!]!
  createUser(phoneNumber: String!): AuthToken!
  publisherMutation(message: String!): String!
  sendMessage(message: String!): String!
  updateUser(input: UpdateUserInput!): User!
}

type Participant {
  id: ID!
  userId: String!
}

type Query {
  getAllMessages: [Message!]!
  getConversationById(conversationId: String!): Conversation!
  getMatches: [Match!]!
  getMessagesByConversationId(conversationId: String!): [Message!]!
  me: User!
}

"""How the user swings"""
enum SexualOrientation {
  ASEXUAL
  BISEXUAL
  DEMISEXUAL
  GAY
  LESBIAN
  PANSEXUAL
  QUEER
  QUESTIONING
  STRAIGHT
}

"""Who to show to the user"""
enum ShowPreference {
  EVERYONE
  MEN
  WOMEN
}

type Subscription {
  normalSubscription: String!
  receiveMessage: String!
  subscribeByConversationId: Conversation!
}

input UpdateUserInput {
  birthday: String
  email: String
  gender: Gender
  name: String
  school: String
  sexualOrientation: SexualOrientation
  showPreference: ShowPreference
}

"""User auth information"""
type User {
  birthday: String
  email: String
  gender: Gender
  id: ID!
  name: String
  phoneNumber: String!
  school: String
  sexualOrientation: SexualOrientation
  showPreference: ShowPreference
  verified: Boolean!
}
